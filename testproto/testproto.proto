syntax = "proto3";

package protofm.test;

option go_package = ".;testproto";

service TestService {
  rpc TestStreamFieldMask(FakeFieldMaskRequest) returns (stream SimpleObject);
  rpc TestStreamNoFieldMask(NoFieldMaskRequest) returns (stream SimpleObject);
}

message Single {
  string value = 1;
}

message RepeatedAndSingle {
  Single single_value = 1;
  repeated string repeated_value = 2;
}

message ComplexObject {
  RepeatedAndSingle repeated_and_single_value = 1;
  string single_value = 2;
}

message SimpleObject {
  string pow = 1;
  string wow = 2;
  int32 foo = 3;
  int32 baz = 4;
}

message NestedObject{
  int32 pow = 1;
  string wow = 2;
  message FooBaz {
    int32 foo = 1;
    string baz = 2;
  }
  repeated FooBaz foo_baz = 3;
  ComplexObject complex_object = 4;
}

message FakeFieldMaskRequest {
  repeated string field_mask = 1;
  int32 nr_responses = 2;
  string ret_error = 3;
  SimpleObject wanted_response = 4;
}
message NoFieldMaskRequest {
  int32 nr_responses = 1;
  string ret_error = 2;
  SimpleObject wanted_response = 3;
}